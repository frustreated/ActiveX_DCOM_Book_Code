// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "teamroom.h"

// Dispatch interfaces referenced by this interface
#include "Font.h"

/////////////////////////////////////////////////////////////////////////////
// CTeamRoom

IMPLEMENT_DYNCREATE(CTeamRoom, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CTeamRoom properties

COleFont CTeamRoom::GetFont()
{
	LPDISPATCH pDispatch;
	GetProperty(DISPID_FONT, VT_DISPATCH, (void*)&pDispatch);
	return COleFont(pDispatch);
}

void CTeamRoom::SetFont(LPDISPATCH propVal)
{
	SetProperty(DISPID_FONT, VT_DISPATCH, propVal);
}

long CTeamRoom::GetArea()
{
	long result;
	GetProperty(0x1, VT_I4, (void*)&result);
	return result;
}

void CTeamRoom::SetArea(long propVal)
{
	SetProperty(0x1, VT_I4, propVal);
}

short CTeamRoom::GetCountRoom()
{
	short result;
	GetProperty(0x2, VT_I2, (void*)&result);
	return result;
}

void CTeamRoom::SetCountRoom(short propVal)
{
	SetProperty(0x2, VT_I2, propVal);
}

short CTeamRoom::GetCountOrderAll()
{
	short result;
	GetProperty(0x3, VT_I2, (void*)&result);
	return result;
}

void CTeamRoom::SetCountOrderAll(short propVal)
{
	SetProperty(0x3, VT_I2, propVal);
}

float CTeamRoom::GetSumOrderAll()
{
	float result;
	GetProperty(0x4, VT_R4, (void*)&result);
	return result;
}

void CTeamRoom::SetSumOrderAll(float propVal)
{
	SetProperty(0x4, VT_R4, propVal);
}

CString CTeamRoom::GetInfoOrderAll()
{
	CString result;
	GetProperty(0x5, VT_BSTR, (void*)&result);
	return result;
}

void CTeamRoom::SetInfoOrderAll(LPCTSTR propVal)
{
	SetProperty(0x5, VT_BSTR, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CTeamRoom operations

BOOL CTeamRoom::Room(short x0, short y0, short x1, short y1, short xDoor, short yDoor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x6, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		x0, y0, x1, y1, xDoor, yDoor);
	return result;
}

CString CTeamRoom::GetName(short sIndex)
{
	CString result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x7, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		sIndex);
	return result;
}

void CTeamRoom::SetName(short sIndex, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I2 VTS_BSTR;
	InvokeHelper(0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 sIndex, lpszNewValue);
}

void CTeamRoom::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
